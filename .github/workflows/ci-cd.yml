name: CI/CD Pipeline for F1WebApp

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Entorno para ejecutar'
        required: true
        default: 'develop'

jobs:
  build-and-test:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./F1WebAppBack
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'
        
    - name: Restore Shared Dependencies
      run: |
        dotnet restore F1.Shared.Domain
        dotnet restore F1.Shared.Database
        dotnet restore F1.Application
          
    - name: Restore API dependencies
      run: |
        dotnet restore F1.CommunityService
        dotnet restore F1.Users
        dotnet restore F1.News
        
    # Build commands
    - name: Build Shared Components
      run: |
        dotnet build F1.Shared.Domain --configuration Release --no-restore
        dotnet build F1.Shared.Database --configuration Release --no-restore
        dotnet build F1.Shared.Application --configuration Release --no-restore
    
    - name: Build API Components
      run: |
        dotnet build F1.CommunityService --configuration Release --no-restore
        dotnet build F1.Users --configuration Release --no-restore
        dotnet build F1.News --configuration Release --no-restore
    
    - name: Run Tests
      run: |
        dotnet test F1.Tests/F1.Shared.ApplicationTests --configuration Release --no-build --logger "trx;LogFileName=test-results.trx"
        # dotnet test F1.Tests/F1.Shared.DomainTests --configuration Release --no-build
     
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4  # Versi√≥n actualizada
      with:
        name: test-results
        path: F1WebAppBack/F1.Tests/TestResults/*.trx

  automerge:
    needs: build-and-test
    if: github.ref == 'refs/heads/develop' && success()
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Merge develop into main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git fetch origin main:main
        git checkout main
        git merge --no-ff origin/develop -m "Automerged develop into main [skip ci]"
        git push origin main
